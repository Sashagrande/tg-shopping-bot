
services:

  server: &default_service
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
    #      redis:
    #        condition: service_started
    #      rabbitmq:
    #        condition: service_healthy
    command: node blablabla
    volumes:
      - .:/app
    environment:
      - POSTGRESQL_DSN

  postgres: &postgres
    image: postgres:17
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 3s
      timeout: 2s
      retries: 10

  redis: &redis
    image: redis:6
    command: redis-server --maxmemory 256Mb --databases 30
    restart: "no"
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 3s
      timeout: 2s
      retries: 10

  rabbitmq: &rabbit
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 3s
      timeout: 2s
      retries: 10

  test:
    <<: *default_service
    build:
      context: .
      target: developer
    depends_on:
      postgres:
        condition: service_healthy
    #      redis_test:
    #        condition: service_started
    #      rabbitmq_test:
    #        condition: service_healthy
    environment:
      - POSTGRESQL_DSN

  dbmate:  # migration tool
    image: amacneil/dbmate:latest
    container_name: dbmate
    network_mode: host  # use network of host to connect to local postgres
    volumes:
      - ./db:/db

volumes:
  postgres-data:
